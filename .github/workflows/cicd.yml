name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Lint Code
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Flake8
        run: pip install flake8

      - name: Run Linter
        run: flake8 src/ app.py --max-line-length=100

  test:
    name: Test the Model
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Install pytest
        run: pip install pytest

      - name: Install DVC
        run: |
          python -m pip install dvc

      - name: Pull data with DVC
        run: |
          dvc pull data/diabetes.csv  # Fetch the data from remote   

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD/src" >> $GITHUB_ENV

      - name: Run Tests
        run: pytest src/test_model.py

  mlflow:
    name: Start MLflow Server
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Start MLflow Server
        run: |
          nohup mlflow server --backend-store-uri sqlite:///mlflow.db \
          --default-artifact-root ./mlartifacts --host 0.0.0.0 --port 5000 &
        continue-on-error: true

  build-and-deploy:
    name: Build and Deploy Flask App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t flask-ml-app .

      - name: Push Docker Image to DockerHub
        run: docker push flask-ml-app

      - name: Run Docker Container
        run: docker run -d -p 5001:5001 flask-ml-app
